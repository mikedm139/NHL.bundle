from gamecenter import GCLogin as Login

RE_GAME = Regex('\?id=(?P<season>[0-9]{4})(?P<gtype>[0-9]{2})(?P<game_id>[0-9]{4})')

GAME_XML = 'http://gamecenter.nhl.com/nhlgc/servlets/game'

RE_PART1 = Regex('(nlds_vod/nhl/vod/.+)\.mp4')

####################################################################################################
def NormalizeURL(url):
	return url

####################################################################################################
def MetadataObjectForURL(url):
	game = GetXML(url).xpath('//game')[0]
	date = Datetime.ParseDate(game.xpath("./date")[0].text).date()
	homeTeam = game.xpath("./homeTeam")[0].text
	homeGoals = game.xpath("./homeGoals")[0].text
        awayTeam = game.xpath("./awayTeam")[0].text
	awayGoals = game.xpath("./awayGoals")[0].text
	result = game.xpath("./result")[0].text
	
        title = "%s at %s - %s" % (awayTeam, homeTeam, date)
	if Prefs['score_summary']:
	    summary = "%s - %s %s" % (awayGoals, homeGoals, result)
	else:
	    summary = None
	if '#HOME' in url:
		summary += "\nHome Feed"
	elif '#AWAY' in url:
		summary += "\nAway  Feed"
	else:
		pass
	
	return VideoClipObject(
		title = title,
		summary=summary,
		originally_available_at=date,
		thumb = R('nhl.png')
	)

####################################################################################################
def MediaObjectsForURL(url):
	return [
		MediaObject(
			parts=[PartObject(key=HTTPLiveStreamURL(Callback(PlayHLS, url=url)))],
			video_resolution = 720
		)
	]

####################################################################################################
@indirect
def PlayHLS(url):
	game = GetXML(url).xpath('//game')[0]
	values = GetValues(url)
	playpath = game.xpath('.//publishPoint')[0].text
	#playpath_part1 = playpath[37:][:-49]
	playpath_part1 = RE_PART1.search(playpath).group(1)
	m3u8_url = "http://nlds150.neulion.com/%s_ced.mp4.m3u8" % (playpath_part1.rstrip('_pc'))
        
	if "#AWAY" in url:
		m3u8_url = m3u8_url.replace('_h_', '_a_')
	
	return IndirectResponse(VideoClipObject, key=m3u8_url)


####################################################################################################
def GetValues(url):
	url_values = RE_GAME.search(url).groupdict()
	values = {'season' : url_values['season'], 'type' : int(url_values['gtype']), 'gid' : url_values['game_id'], 'isFlex' : 'true'}
	return values
####################################################################################################
def GetXML(url):
	values = GetValues(url)
	xml_data = None
	cookies = Login(Prefs['gc_username'], Prefs['gc_password'])
	#Header for XML Request
        headers = {
		'Host' : 'gamecenter.nhl.com',
		'User-Agent' : 'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)',
		'Accept' : '*/*',
		'Referer' : 'http://gamecenter.nhl.com/nhlgc/console.jsp',
		'Accept-Language' : 'de-de',
		'Accept-Encoding' : 'gzip, deflate',
		'Cookie' : cookies,
		'Connection' : 'keep-alive',
		'Content-Type' : 'application/x-www-form-urlencoded'
		}
        request = HTTP.Request(GAME_XML, headers=headers, values=values)
        xml_data = XML.ElementFromString(request.content.strip())
        return xml_data

####################################################################################################
def TestURLs():

	test_urls = []
	return test_urls

   